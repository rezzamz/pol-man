{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\n// دریافت اطلاعات روزانه سالن\nexport const getHallDailyData = async hallId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/halls/${hallId}/daily-data`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching hall daily data:', error);\n    throw error;\n  }\n};\n\n// ذخیره اطلاعات روزانه سالن\nexport const saveHallDailyData = async (hallId, day, data) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/halls/${hallId}/daily-data/${day}`, data);\n    return response.data;\n  } catch (error) {\n    console.error('Error saving hall daily data:', error);\n    throw error;\n  }\n};\n\n// دریافت استانداردهای راس بر اساس نوع بودجه\nexport const getRossStandardData = async budgetType => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/standards/ross`, {\n      params: {\n        budgetType\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching Ross standard data:', error);\n    throw error;\n  }\n};\n\n// دریافت اطلاعات کلی سالن\nexport const getHallInfo = async hallId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/halls/${hallId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching hall info:', error);\n    throw error;\n  }\n};\n\n// دریافت تمام سالن‌ها\nexport const getHalls = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/halls`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching halls:', error);\n    throw error;\n  }\n};\n\n// ایجاد سالن جدید\nexport const createHall = async hallData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/halls`, hallData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating hall:', error);\n    throw error;\n  }\n};\n\n// به‌روزرسانی سالن\nexport const updateHall = async (id, hallData) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/halls/${id}`, hallData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating hall:', error);\n    throw error;\n  }\n};\n\n// حذف سالن\nexport const deleteHall = async id => {\n  try {\n    await axios.delete(`${API_BASE_URL}/halls/${id}`);\n  } catch (error) {\n    console.error('Error deleting hall:', error);\n    throw error;\n  }\n};\n\n// جستجوی سالن بر اساس نام\nexport const searchHallsByName = async name => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/halls/search`, {\n      params: {\n        name\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching halls by name:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","getHallDailyData","hallId","response","get","data","error","console","saveHallDailyData","day","post","getRossStandardData","budgetType","params","getHallInfo","getHalls","createHall","hallData","updateHall","id","put","deleteHall","delete","searchHallsByName","name"],"sources":["/Users/rezamohammadzadeh/pol-man/frontend/src/modules/halls/api/halls.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\n\ninterface DailyData {\n  day: number;\n  feedConsumption: number;\n  waterConsumption: number;\n  averageWeight: number;\n  mortality: number;\n}\n\ninterface RossStandardData {\n  day: number;\n  weightGram: number;\n  weightKg: number;\n  dailyWeightGainGram: number;\n  avgDailyWeightGainGram: number;\n  feedConsumptionGram: number;\n  cumulativeFeedGram: number;\n  cumulativeFeedKg: number;\n  feedConversionRatio: number;\n  waterConsumptionLiter: number;\n  mortalityCount: number;\n}\n\nexport interface Hall {\n  id: string;\n  hallName: string;\n  importerName: string;\n  numberOfChickens: number;\n  initialWeight: number;\n  budgetType: 'Standard' | 'Premium' | 'Economy';\n  createdAt: string;\n}\n\n// دریافت اطلاعات روزانه سالن\nexport const getHallDailyData = async (hallId: string): Promise<DailyData[]> => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/halls/${hallId}/daily-data`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching hall daily data:', error);\n    throw error;\n  }\n};\n\n// ذخیره اطلاعات روزانه سالن\nexport const saveHallDailyData = async (hallId: string, day: number, data: DailyData): Promise<DailyData> => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/halls/${hallId}/daily-data/${day}`, data);\n    return response.data;\n  } catch (error) {\n    console.error('Error saving hall daily data:', error);\n    throw error;\n  }\n};\n\n// دریافت استانداردهای راس بر اساس نوع بودجه\nexport const getRossStandardData = async (budgetType: string): Promise<RossStandardData[]> => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/standards/ross`, {\n      params: { budgetType }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching Ross standard data:', error);\n    throw error;\n  }\n};\n\n// دریافت اطلاعات کلی سالن\nexport const getHallInfo = async (hallId: string): Promise<Hall> => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/halls/${hallId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching hall info:', error);\n    throw error;\n  }\n};\n\n// دریافت تمام سالن‌ها\nexport const getHalls = async (): Promise<Hall[]> => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/halls`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching halls:', error);\n    throw error;\n  }\n};\n\n// ایجاد سالن جدید\nexport const createHall = async (hallData: Omit<Hall, 'id' | 'createdAt'>): Promise<Hall> => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/halls`, hallData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating hall:', error);\n    throw error;\n  }\n};\n\n// به‌روزرسانی سالن\nexport const updateHall = async (id: string, hallData: Partial<Hall>): Promise<Hall> => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/halls/${id}`, hallData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating hall:', error);\n    throw error;\n  }\n};\n\n// حذف سالن\nexport const deleteHall = async (id: string): Promise<void> => {\n  try {\n    await axios.delete(`${API_BASE_URL}/halls/${id}`);\n  } catch (error) {\n    console.error('Error deleting hall:', error);\n    throw error;\n  }\n};\n\n// جستجوی سالن بر اساس نام\nexport const searchHallsByName = async (name: string): Promise<Hall[]> => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/halls/search`, {\n      params: { name }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching halls by name:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}