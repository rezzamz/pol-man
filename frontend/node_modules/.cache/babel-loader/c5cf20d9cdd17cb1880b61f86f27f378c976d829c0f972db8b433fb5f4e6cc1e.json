{"ast":null,"code":"var _jsxFileName = \"/Users/rezamohammadzadeh/pol-man/frontend/src/modules/halls/HallDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Button, Form, Input } from 'antd';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport axios from 'axios';\nimport './HallDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rossStandardData = [\n  // ... existing data\n];\nconst premiumStandardData = [\n  // ... premium data\n];\nconst HallDetail = () => {\n  _s();\n  const {\n    hallId\n  } = useParams();\n  const location = useLocation();\n  const {\n    budgetType\n  } = location.state || {\n    budgetType: 'standard'\n  };\n\n  // اگر hallId وجود نداشته باشد، نمایش ارور\n  if (!hallId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Hall ID is missing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  const [hall, setHall] = useState(null); // برای ذخیره اطلاعات سالن\n  const [dailyData, setDailyData] = useState([]);\n  const [currentDay, setCurrentDay] = useState(1);\n  const [standardData, setStandardData] = useState(rossStandardData);\n  useEffect(() => {\n    // بارگذاری اطلاعات سالن از سرور\n    const fetchHallData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/halls/${hallId}`);\n        setHall(response.data);\n      } catch (error) {\n        if (axios.isAxiosError(error)) {\n          var _error$response;\n          console.error('Error fetching hall data:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n        } else {\n          console.error('Unexpected error fetching hall data:', error);\n        }\n      }\n    };\n    if (hallId) {\n      // بررسی دوباره برای hallId\n      fetchHallData();\n    }\n  }, [hallId]);\n  const handleDailySubmit = async values => {\n    const updatedDailyData = [...dailyData.filter(data => data.day !== currentDay), {\n      ...values,\n      day: currentDay\n    }];\n    setDailyData(updatedDailyData);\n\n    // ارسال داده‌ها به سرور\n    try {\n      await axios.post(`http://localhost:8000/halls/${hallId}/daily`, values);\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        var _error$response2;\n        console.error('Error submitting daily data:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      } else {\n        console.error('Unexpected error submitting daily data:', error);\n      }\n    }\n  };\n  const goToPreviousDay = () => {\n    if (currentDay > 1) {\n      setCurrentDay(currentDay - 1);\n    }\n  };\n  const goToNextDay = () => {\n    if (currentDay < 56) {\n      setCurrentDay(currentDay + 1);\n    }\n  };\n  const getDailyDataForDay = day => {\n    return dailyData.find(data => data.day === day) || {\n      day,\n      feedConsumption: 0,\n      waterConsumption: 0,\n      averageWeight: 0,\n      mortality: 0\n    };\n  };\n  const calculateCumulativeFeed = day => {\n    const cumulativeFeed = dailyData.filter(data => data.day <= day).reduce((acc, data) => acc + data.feedConsumption, 0);\n    return Number(cumulativeFeed);\n  };\n  const calculateFeedConversionRatio = day => {\n    const cumulativeFeed = calculateCumulativeFeed(day);\n    const cumulativeWeight = dailyData.filter(data => data.day <= day).reduce((acc, data) => acc + data.averageWeight * (1000 - data.mortality), 0);\n    return cumulativeWeight / cumulativeFeed;\n  };\n  const dailyDataForCurrentDay = getDailyDataForDay(currentDay);\n  const standardDataForCurrentDay = standardData.find(data => data.day === currentDay) || {};\n  if (!hall) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hall-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Hall Details for Hall \", hallId, \" - \", hall.hallName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: goToPreviousDay,\n        disabled: currentDay === 1,\n        children: \"Previous Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Day \", currentDay]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: goToNextDay,\n        disabled: currentDay === 56,\n        children: \"Next Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: handleDailySubmit,\n      initialValues: dailyDataForCurrentDay,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Feed Consumption (kg)\",\n        name: \"feedConsumption\",\n        rules: [{\n          required: true,\n          message: 'Please input the feed consumption!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          addonAfter: `Standard: ${(standardDataForCurrentDay.feedConsumptionGram || 0) / 1000} kg`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Water Consumption (liters)\",\n        name: \"waterConsumption\",\n        rules: [{\n          required: true,\n          message: 'Please input the water consumption!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          addonAfter: `Standard: ${standardDataForCurrentDay.waterConsumptionLiter || 'N/A'} liters`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Average Weight (kg)\",\n        name: \"averageWeight\",\n        rules: [{\n          required: true,\n          message: 'Please input the average weight!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          addonAfter: `Standard: ${standardDataForCurrentDay.weightKg || 'N/A'} kg`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Mortality\",\n        name: \"mortality\",\n        rules: [{\n          required: true,\n          message: 'Please input the mortality!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          addonAfter: `Standard: ${standardDataForCurrentDay.mortalityCount || 'N/A'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculated-fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Calculated Fields for Day \", currentDay]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cumulative Feed Consumption (kg): \", calculateCumulativeFeed(currentDay).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Feed Conversion Ratio: \", calculateFeedConversionRatio(currentDay).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Feed Consumption (kg)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: dailyData.map(data => `Day ${data.day}`),\n          datasets: [{\n            label: 'Feed Consumption (kg)',\n            data: dailyData.map(data => data.feedConsumption),\n            borderColor: 'rgba(75,192,192,1)',\n            fill: false\n          }, {\n            label: 'Standard Feed Consumption (kg)',\n            data: standardData.map(data => data.feedConsumptionGram / 1000),\n            borderColor: 'rgba(255,99,132,1)',\n            fill: false\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Water Consumption (liters)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: dailyData.map(data => `Day ${data.day}`),\n          datasets: [{\n            label: 'Water Consumption (liters)',\n            data: dailyData.map(data => data.waterConsumption),\n            borderColor: 'rgba(54,162,235,1)',\n            fill: false\n          }, {\n            label: 'Standard Water Consumption (liters)',\n            data: standardData.map(data => data.waterConsumptionLiter),\n            borderColor: 'rgba(255,206,86,1)',\n            fill: false\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Average Weight (kg)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: dailyData.map(data => `Day ${data.day}`),\n          datasets: [{\n            label: 'Average Weight (kg)',\n            data: dailyData.map(data => data.averageWeight),\n            borderColor: 'rgba(255,99,132,1)',\n            fill: false\n          }, {\n            label: 'Standard Average Weight (kg)',\n            data: standardData.map(data => data.weightKg),\n            borderColor: 'rgba(75,192,192,1)',\n            fill: false\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Mortality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: dailyData.map(data => `Day ${data.day}`),\n          datasets: [{\n            label: 'Mortality',\n            data: dailyData.map(data => data.mortality),\n            borderColor: 'rgba(153,102,255,1)',\n            fill: false\n          }, {\n            label: 'Standard Mortality',\n            data: standardData.map(data => data.mortalityCount),\n            borderColor: 'rgba(255,159,64,1)',\n            fill: false\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(HallDetail, \"SLo4kBfgJ5rWUr0yYDh4093cNN0=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = HallDetail;\nexport default HallDetail;\nvar _c;\n$RefreshReg$(_c, \"HallDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","Button","Form","Input","Line","axios","jsxDEV","_jsxDEV","rossStandardData","premiumStandardData","HallDetail","_s","hallId","location","budgetType","state","children","fileName","_jsxFileName","lineNumber","columnNumber","hall","setHall","dailyData","setDailyData","currentDay","setCurrentDay","standardData","setStandardData","fetchHallData","response","get","data","error","isAxiosError","_error$response","console","handleDailySubmit","values","updatedDailyData","filter","day","post","_error$response2","goToPreviousDay","goToNextDay","getDailyDataForDay","find","feedConsumption","waterConsumption","averageWeight","mortality","calculateCumulativeFeed","cumulativeFeed","reduce","acc","Number","calculateFeedConversionRatio","cumulativeWeight","dailyDataForCurrentDay","standardDataForCurrentDay","className","hallName","onClick","disabled","onFinish","initialValues","Item","label","name","rules","required","message","type","addonAfter","feedConsumptionGram","waterConsumptionLiter","weightKg","mortalityCount","htmlType","toFixed","labels","map","datasets","borderColor","fill","_c","$RefreshReg$"],"sources":["/Users/rezamohammadzadeh/pol-man/frontend/src/modules/halls/HallDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Button, Form, Input } from 'antd';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport axios from 'axios';\nimport './HallDetail.css';\n\ninterface DailyData {\n  day: number;\n  feedConsumption: number;\n  waterConsumption: number;\n  averageWeight: number;\n  mortality: number;\n}\n\ninterface RossStandardData {\n  day: number;\n  weightGram: number;\n  weightKg: number;\n  dailyWeightGainGram: number;\n  avgDailyWeightGainGram: number;\n  feedConsumptionGram: number;\n  cumulativeFeedGram: number;\n  cumulativeFeedKg: number;\n  feedConversionRatio: number;\n  waterConsumptionLiter: number;\n  mortalityCount: number;\n}\n\nconst rossStandardData: RossStandardData[] = [\n  // ... existing data\n];\n\nconst premiumStandardData: RossStandardData[] = [\n  // ... premium data\n];\n\nconst HallDetail: React.FC = () => {\n  const { hallId } = useParams<{ hallId: string }>();\n  const location = useLocation();\n  const { budgetType } = (location.state as any) || { budgetType: 'standard' };\n\n  // اگر hallId وجود نداشته باشد، نمایش ارور\n  if (!hallId) {\n    return <div>Error: Hall ID is missing</div>;\n  }\n\n  const [hall, setHall] = useState<any>(null); // برای ذخیره اطلاعات سالن\n  const [dailyData, setDailyData] = useState<DailyData[]>([]);\n  const [currentDay, setCurrentDay] = useState(1);\n  const [standardData, setStandardData] = useState<RossStandardData[]>(rossStandardData);\n\n  useEffect(() => {\n    // بارگذاری اطلاعات سالن از سرور\n    const fetchHallData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/halls/${hallId}`);\n        setHall(response.data);\n      } catch (error) {\n        if (axios.isAxiosError(error)) {\n          console.error('Error fetching hall data:', error.response?.data);\n        } else {\n          console.error('Unexpected error fetching hall data:', error);\n        }\n      }\n    };\n\n    if (hallId) {  // بررسی دوباره برای hallId\n      fetchHallData();\n    }\n  }, [hallId]);\n\n  const handleDailySubmit = async (values: DailyData) => {\n    const updatedDailyData = [...dailyData.filter(data => data.day !== currentDay), { ...values, day: currentDay }];\n    setDailyData(updatedDailyData);\n    \n    // ارسال داده‌ها به سرور\n    try {\n      await axios.post(`http://localhost:8000/halls/${hallId}/daily`, values);\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        console.error('Error submitting daily data:', error.response?.data);\n      } else {\n        console.error('Unexpected error submitting daily data:', error);\n      }\n    }\n  };\n\n  const goToPreviousDay = () => {\n    if (currentDay > 1) {\n      setCurrentDay(currentDay - 1);\n    }\n  };\n\n  const goToNextDay = () => {\n    if (currentDay < 56) {\n      setCurrentDay(currentDay + 1);\n    }\n  };\n\n  const getDailyDataForDay = (day: number): DailyData => {\n    return dailyData.find(data => data.day === day) || { day, feedConsumption: 0, waterConsumption: 0, averageWeight: 0, mortality: 0 };\n  };\n\n  const calculateCumulativeFeed = (day: number): number => {\n    const cumulativeFeed = dailyData.filter(data => data.day <= day).reduce((acc, data) => acc + data.feedConsumption, 0);\n    return Number(cumulativeFeed);\n  };\n\n  const calculateFeedConversionRatio = (day: number): number => {\n    const cumulativeFeed = calculateCumulativeFeed(day);\n    const cumulativeWeight = dailyData.filter(data => data.day <= day).reduce((acc, data) => acc + data.averageWeight * (1000 - data.mortality), 0);\n    return cumulativeWeight / cumulativeFeed;\n  };\n\n  const dailyDataForCurrentDay = getDailyDataForDay(currentDay);\n  const standardDataForCurrentDay = standardData.find(data => data.day === currentDay) || {} as RossStandardData;\n\n  if (!hall) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"hall-detail-container\">\n      <h2>Hall Details for Hall {hallId} - {hall.hallName}</h2>\n      <div className=\"day-navigation\">\n        <Button onClick={goToPreviousDay} disabled={currentDay === 1}>Previous Day</Button>\n        <span>Day {currentDay}</span>\n        <Button onClick={goToNextDay} disabled={currentDay === 56}>Next Day</Button>\n      </div>\n      <Form onFinish={handleDailySubmit} initialValues={dailyDataForCurrentDay}>\n        <Form.Item label=\"Feed Consumption (kg)\" name=\"feedConsumption\" rules={[{ required: true, message: 'Please input the feed consumption!' }]}>\n          <Input type=\"number\" addonAfter={`Standard: ${(standardDataForCurrentDay.feedConsumptionGram || 0) / 1000} kg`} />\n        </Form.Item>\n        <Form.Item label=\"Water Consumption (liters)\" name=\"waterConsumption\" rules={[{ required: true, message: 'Please input the water consumption!' }]}>\n          <Input type=\"number\" addonAfter={`Standard: ${standardDataForCurrentDay.waterConsumptionLiter || 'N/A'} liters`} />\n        </Form.Item>\n        <Form.Item label=\"Average Weight (kg)\" name=\"averageWeight\" rules={[{ required: true, message: 'Please input the average weight!' }]}>\n          <Input type=\"number\" addonAfter={`Standard: ${standardDataForCurrentDay.weightKg || 'N/A'} kg`} />\n        </Form.Item>\n        <Form.Item label=\"Mortality\" name=\"mortality\" rules={[{ required: true, message: 'Please input the mortality!' }]}>\n          <Input type=\"number\" addonAfter={`Standard: ${standardDataForCurrentDay.mortalityCount || 'N/A'}`} />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n        </Form.Item>\n      </Form>\n      <div className=\"calculated-fields\">\n        <h4>Calculated Fields for Day {currentDay}</h4>\n        <p>Cumulative Feed Consumption (kg): {calculateCumulativeFeed(currentDay).toFixed(2)}</p>\n        <p>Feed Conversion Ratio: {calculateFeedConversionRatio(currentDay).toFixed(2)}</p>\n      </div>\n      <div className=\"charts\">\n        <h4>Feed Consumption (kg)</h4>\n        <Line\n          data={{\n            labels: dailyData.map(data => `Day ${data.day}`),\n            datasets: [\n              {\n                label: 'Feed Consumption (kg)',\n                data: dailyData.map(data => data.feedConsumption),\n                borderColor: 'rgba(75,192,192,1)',\n                fill: false,\n              },\n              {\n                label: 'Standard Feed Consumption (kg)',\n                data: standardData.map(data => data.feedConsumptionGram / 1000),\n                borderColor: 'rgba(255,99,132,1)',\n                fill: false,\n              }\n            ],\n          }}\n        />\n        <h4>Water Consumption (liters)</h4>\n        <Line\n          data={{\n            labels: dailyData.map(data => `Day ${data.day}`),\n            datasets: [\n              {\n                label: 'Water Consumption (liters)',\n                data: dailyData.map(data => data.waterConsumption),\n                borderColor: 'rgba(54,162,235,1)',\n                fill: false,\n              },\n              {\n                label: 'Standard Water Consumption (liters)',\n                data: standardData.map(data => data.waterConsumptionLiter),\n                borderColor: 'rgba(255,206,86,1)',\n                fill: false,\n              }\n            ],\n          }}\n        />\n        <h4>Average Weight (kg)</h4>\n        <Line\n          data={{\n            labels: dailyData.map(data => `Day ${data.day}`),\n            datasets: [\n              {\n                label: 'Average Weight (kg)',\n                data: dailyData.map(data => data.averageWeight),\n                borderColor: 'rgba(255,99,132,1)',\n                fill: false,\n              },\n              {\n                label: 'Standard Average Weight (kg)',\n                data: standardData.map(data => data.weightKg),\n                borderColor: 'rgba(75,192,192,1)',\n                fill: false,\n              }\n            ],\n          }}\n        />\n        <h4>Mortality</h4>\n        <Line\n          data={{\n            labels: dailyData.map(data => `Day ${data.day}`),\n            datasets: [\n              {\n                label: 'Mortality',\n                data: dailyData.map(data => data.mortality),\n                borderColor: 'rgba(153,102,255,1)',\n                fill: false,\n              },\n              {\n                label: 'Standard Mortality',\n                data: standardData.map(data => data.mortalityCount),\n                borderColor: 'rgba(255,159,64,1)',\n                fill: false,\n              }\n            ],\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HallDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}