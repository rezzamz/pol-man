{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000'; // آدرس سرور\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const deleteHall = async id => {\n  // صادر کردن به صورت معمولی\n  const response = await api.delete(`/api/halls/${id}`); // اطمینان حاصل کنید که ID در URL گنجانده شده باشد\n  return response.data;\n};\nconst handleDelete = async id => {\n  try {\n    const response = await deleteHall(id); // اطمینان حاصل کنید که id به درستی ارسال می‌شود\n    console.log(\"Hall deleted successfully\", response);\n  } catch (error) {\n    console.error(\"Error deleting hall\", error);\n  }\n};\nexport const getData = async endpoint => {\n  try {\n    const response = await api.get(endpoint);\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n    throw error;\n  }\n};\nexport const postData = async (endpoint, data) => {\n  try {\n    const response = await api.post(endpoint, data);\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n    throw error;\n  }\n};\nexport const fetchHalls = async () => {\n  try {\n    const response = await api.get('/halls'); // مسیر GET سالن‌ها\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n    throw error;\n  }\n};\nexport const createHall = async hallData => {\n  try {\n    const response = await api.post('/halls/create', hallData); // مسیر POST برای ساخت سالن\n    return response.data;\n  } catch (error) {\n    console.error('Error creating hall:', error);\n    throw error;\n  }\n};\nconst handleApiError = error => {\n  if (axios.isAxiosError(error) && error.response) {\n    console.error(`API Error: ${error.response.status} ${error.response.statusText}`);\n  } else {\n    console.error('Unexpected error', error);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","deleteHall","id","response","delete","data","handleDelete","console","log","error","getData","endpoint","get","handleApiError","postData","post","fetchHalls","createHall","hallData","isAxiosError","status","statusText"],"sources":["/Users/rezamohammadzadeh/pol-man/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000'; // آدرس سرور\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n\nexport const deleteHall = async (id: string) => { // صادر کردن به صورت معمولی\n  const response = await api.delete(`/api/halls/${id}`); // اطمینان حاصل کنید که ID در URL گنجانده شده باشد\n  return response.data;\n};\n\nconst handleDelete = async (id: string) => {\n  try {\n    const response = await deleteHall(id); // اطمینان حاصل کنید که id به درستی ارسال می‌شود\n    console.log(\"Hall deleted successfully\", response);\n  } catch (error) {\n    console.error(\"Error deleting hall\", error);\n  }\n};\n\n\n\nexport const getData = async <T>(endpoint: string): Promise<T> => {\n  try {\n    const response: AxiosResponse<T> = await api.get(endpoint);\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n    throw error;\n  }\n};\n\nexport const postData = async <T>(endpoint: string, data: unknown): Promise<T> => {\n  try {\n    const response: AxiosResponse<T> = await api.post(endpoint, data);\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n    throw error;\n  }\n};\n\nexport const fetchHalls = async () => {\n  try {\n    const response = await api.get('/halls'); // مسیر GET سالن‌ها\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n    throw error;\n  }\n};\n\nexport const createHall = async (hallData: any) => {\n  try {\n    const response = await api.post('/halls/create', hallData); // مسیر POST برای ساخت سالن\n    return response.data;\n  } catch (error) {\n    console.error('Error creating hall:', error);\n    throw error;\n  }\n};\n\nconst handleApiError = (error: unknown): void => {\n  if (axios.isAxiosError(error) && error.response) {\n    console.error(`API Error: ${error.response.status} ${error.response.statusText}`);\n  } else {\n    console.error('Unexpected error', error);\n  }\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;AAE5C,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAGF,OAAO,MAAMC,UAAU,GAAG,MAAOC,EAAU,IAAK;EAAE;EAChD,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,MAAM,CAAC,cAAcF,EAAE,EAAE,CAAC,CAAC,CAAC;EACvD,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMC,YAAY,GAAG,MAAOJ,EAAU,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,UAAU,CAACC,EAAE,CAAC,CAAC,CAAC;IACvCK,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEL,QAAQ,CAAC;EACpD,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC7C;AACF,CAAC;AAID,OAAO,MAAMC,OAAO,GAAG,MAAUC,QAAgB,IAAiB;EAChE,IAAI;IACF,MAAMR,QAA0B,GAAG,MAAMN,GAAG,CAACe,GAAG,CAACD,QAAQ,CAAC;IAC1D,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdI,cAAc,CAACJ,KAAK,CAAC;IACrB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAG,MAAAA,CAAUH,QAAgB,EAAEN,IAAa,KAAiB;EAChF,IAAI;IACF,MAAMF,QAA0B,GAAG,MAAMN,GAAG,CAACkB,IAAI,CAACJ,QAAQ,EAAEN,IAAI,CAAC;IACjE,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdI,cAAc,CAACJ,KAAK,CAAC;IACrB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMN,GAAG,CAACe,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1C,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdI,cAAc,CAACJ,KAAK,CAAC;IACrB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAOC,QAAa,IAAK;EACjD,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMN,GAAG,CAACkB,IAAI,CAAC,eAAe,EAAEG,QAAQ,CAAC,CAAC,CAAC;IAC5D,OAAOf,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMI,cAAc,GAAIJ,KAAc,IAAW;EAC/C,IAAId,KAAK,CAACwB,YAAY,CAACV,KAAK,CAAC,IAAIA,KAAK,CAACN,QAAQ,EAAE;IAC/CI,OAAO,CAACE,KAAK,CAAC,cAAcA,KAAK,CAACN,QAAQ,CAACiB,MAAM,IAAIX,KAAK,CAACN,QAAQ,CAACkB,UAAU,EAAE,CAAC;EACnF,CAAC,MAAM;IACLd,OAAO,CAACE,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EAC1C;AACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}